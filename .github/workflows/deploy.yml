name: Deploy Satoshi Station Next

on:
  push:
    branches:
      - main
      - production
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      DEPLOY_ENV: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'staging') || (github.ref == 'refs/heads/production' && 'production') || 'staging' }}
      BUCKET_NAME: ${{ github.ref == 'refs/heads/production' && 'sats-sv-static' || 'sats-sv-staging' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Next.js app
        run: npm run build

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy to Google Cloud Storage
        run: |
          echo "Deploying to ${{ env.DEPLOY_ENV }} environment using bucket ${{ env.BUCKET_NAME }}"
          gsutil -m rsync -r -d ./out gs://${{ env.BUCKET_NAME }}
          gsutil -m setmeta -h "Cache-Control:public, max-age=3600" gs://${{ env.BUCKET_NAME }}/**/*.html
          gsutil -m setmeta -h "Cache-Control:public, max-age=86400" gs://${{ env.BUCKET_NAME }}/static/**
          gsutil -m setmeta -h "Cache-Control:public, max-age=31536000" gs://${{ env.BUCKET_NAME }}/_next/**

      - name: Update Load Balancer Backend
        if: env.DEPLOY_ENV == 'production'
        run: |
          echo "Updating load balancer backend for production environment"
          gcloud compute backend-services update sats-sv-backend \
            --global \
            --timeout=60s
