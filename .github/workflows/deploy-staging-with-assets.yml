name: Deploy to Staging with Static Export

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Create optimized static export next.config.js
        run: |
          cat > next.config.js << EOL
          /** @type {import('next').NextConfig} */
          const nextConfig = {
            reactStrictMode: true,
            output: 'export',  // Changed to static export
            distDir: 'out',    // Output to 'out' directory
            images: {
              unoptimized: true, // Required for static export
            },
            trailingSlash: true,
            poweredByHeader: false,
            eslint: {
              ignoreDuringBuilds: true,
            },
            typescript: {
              ignoreBuildErrors: true,
            },
          };
          
          module.exports = nextConfig;
          EOL

      - name: Build Next.js static export
        run: npm run build
        env:
          NEXT_PUBLIC_BASE_URL: 'https://staging.sats.sv'

      - name: Set up Nginx configuration for serving static files
        run: |
          cat > nginx.conf << EOL
          server {
            listen 8080;
            server_name localhost;
            root /usr/share/nginx/html;
            index index.html;
            
            # Enable compression
            gzip on;
            gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
            
            # Handle Next.js static paths
            location / {
              try_files \$uri \$uri.html \$uri/index.html /index.html =404;
            }
            
            # Set caching headers for static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
              expires 30d;
              add_header Cache-Control "public, no-transform";
            }
            
            # Handle 404s with the Next.js custom 404 page
            error_page 404 /404.html;
          }
          EOL

      - name: Create Dockerfile for static hosting
        run: |
          cat > Dockerfile << EOL
          FROM nginx:alpine
          
          # Copy static files
          COPY out/ /usr/share/nginx/html/
          
          # Copy nginx configuration
          COPY nginx.conf /etc/nginx/conf.d/default.conf
          
          # Expose port 8080 (Cloud Run standard)
          EXPOSE 8080
          
          # Start Nginx
          CMD ["nginx", "-g", "daemon off;"]
          EOL
      
      - name: Set up Cloud SDK
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure Docker
        run: |
          gcloud auth configure-docker gcr.io --quiet
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: gcr.io/${{ secrets.GCP_PROJECT_ID }}/sats-web-staging:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: sats-web-staging
          image: gcr.io/${{ secrets.GCP_PROJECT_ID }}/sats-web-staging:${{ github.sha }}
          region: europe-west1
          flags: --allow-unauthenticated --port=8080
          
      - name: Show deployed URL
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"
